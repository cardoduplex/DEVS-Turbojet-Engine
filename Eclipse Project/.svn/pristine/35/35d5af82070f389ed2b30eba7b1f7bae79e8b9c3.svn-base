/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-09-24
 */
package ExperimentMod;

import java.text.DecimalFormat;

import GenCol.entity;
import turbojet.toolkit.Log;
import turbojet.toolkit.ValueSetCache;
import turbojet.toolkit.ValueSetCacheSingleton;
import view.modeling.ViewableAtomic;

/**
 * The Class ExperimentBase.
 */
public class ExperimentBase extends ViewableAtomic {

  /** The value set cache. */
  public final ValueSetCache valueSetCache = ValueSetCacheSingleton.getInstance();

  /** The log. */
  protected Log log;

  /** The job. */
  protected entity job;

  /** The clock. */
  protected double clock;

  /**
   * Instantiates a new experiment base.
   */
  public ExperimentBase() {
    this("ExperimentBase");
  }

  /**
   * Instantiates a new experiment base.
   *
   * @param name the name
   */
  public ExperimentBase(final String name) {
    super(name);
    log = new Log(name);
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#initialize()
   */
  @Override
  public void initialize() {
    super.initialize();
    job = null;
    clock = 0;
    passivate();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#showState()
   */
  @Override
  public void showState() {
    super.showState();

    final DecimalFormat deltaFormat = new DecimalFormat("#0.00");
    log.out("phase=" + phase + "; sigma=" + deltaFormat.format(sigma)
        + "; clock=" + deltaFormat.format(clock));

    if (job != null)
      log.out("valueSet = " + job.getName());
  }

  /* (non-Javadoc)
   * @see view.modeling.ViewableAtomic#getTooltipText()
   */
  @Override
  public String getTooltipText() {
    final DecimalFormat deltaFormat = new DecimalFormat("#0.00");
    String tooltip = super.getTooltipText() + "\nclock: " + deltaFormat.format(clock);
    if (job != null)
      tooltip += "\nvalueSet: " + job.getName();
    return tooltip;
  }
}
