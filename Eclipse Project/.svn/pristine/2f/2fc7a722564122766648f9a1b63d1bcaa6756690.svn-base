/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-09-16
 */
package EngineMod;

import java.awt.Dimension;
import java.awt.Point;

import model.modeling.IODevs;
import view.modeling.ViewableAtomic;
import view.modeling.ViewableComponent;
import view.modeling.ViewableDigraph;

/**
 * The Class TurbojetEngine.
 */
public class TurbojetEngine extends ViewableDigraph {

  /**
   * Instantiates a new turbojet engine.
   */
  public TurbojetEngine() {
    this("TurbojetEngine");
  }

  /**
   * Instantiates a new turbojet engine.
   *
   * @param name the name
   */
  public TurbojetEngine(final String name) {
    super(name);
    defineLayout();

    addInport("xIn");
    addOutport("xOut");
  }

  /**
   * Define layout.
   */
  private void defineLayout() {
    ViewableAtomic p0 = new EngineStage1("Stage1");
    ViewableAtomic p1 = new EngineStage2("Stage2");
    ViewableAtomic p2 = new EngineStage3("Stage3");

    add(p0);
    add(p1);
    add(p2);

    baseCoupling(this, p0);
    baseCoupling(p0, p1);
    baseCoupling(p1, p2);
    baseCoupling(p2, this);

    initialize();

    preferredSize = new Dimension(586, 90);
    p0.setPreferredLocation(new Point(-4, 19));
    p1.setPreferredLocation(new Point(163, 19));
    p2.setPreferredLocation(new Point(333, 19));
  }

  /**
   * Base coupling.
   *
   * @param prev the prev
   * @param next the next
   */
  private void baseCoupling(final IODevs prev, final IODevs next) {
    final String inPort = prev == this ? "xIn" : "xOut";
    final String outPort = next == this ? "xOut" : "xIn";
    addCoupling(prev, inPort, next, outPort);
  }

    /**
     * Automatically generated by the SimView program.
     * Do not edit this manually, as such changes will get overwritten.
     */
    public void layoutForSimView()
    {
        preferredSize = new Dimension(844, 182);
        ((ViewableComponent)withName("Stage2")).setPreferredLocation(new Point(186, 19));
        ((ViewableComponent)withName("Stage1")).setPreferredLocation(new Point(-4, 20));
        ((ViewableComponent)withName("Stage3")).setPreferredLocation(new Point(382, 20));
    }
}
