/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-09-24
 */
package ExperimentMod;

import GenCol.entity;
import model.modeling.message;
import turbojet.toolkit.Log;
import view.modeling.ViewableAtomic;


public class ExperimentBase extends ViewableAtomic {

  protected entity job;

  protected double processingTime;

  protected Log log;

  public ExperimentBase() {
    this("ExperimentBase", 10);
  }

  public ExperimentBase(final String name, final double processingTime) {
    super(name);
    this.processingTime = processingTime;

//    addInport("in");
//    addOutport("out");
//    addInport("next");

//    addTestInput("in", new entity("job1"));
//    addTestInput("in", new entity("job2"), 20);
//    addTestInput("none", new entity("job"));
  }

//  public void initialize() {
//    phase = "passive";
//    sigma = INFINITY;
//    job   = new entity("job");
//    super.initialize();
//  }

//  public void deltext(final double e, final message x) {
//    Continue(e);
//
//    System.out.println("The elapsed time of the processor is" + e);
//    System.out.println("*****************************************");
//    System.out.println("external-Phase before: " + phase);
//
//    if (phaseIs("passive")) {
//      for (int i = 0; i < x.getLength(); i++)
//        if (messageOnPort(x, "in", i)) {
//          job = x.getValOnPort("in", i);
//          holdIn("busy", 10);
//          System.out.println("processing tiem of proc is" + processingTime);
//        }
//    }
//
//    System.out.println("external-Phase after: " + phase);
//  }

//  public void deltint() {
//    System.out.println("Internal-Phase before: " + phase);
//    passivate();
//    job = new entity("none");
//    System.out.println("Internal-Phase after: " + phase);
//  }

//  public void deltcon(double e, message x) {
//    System.out.println("confluent");
//    deltint();
//    deltext(0, x);
//  }

//  public message out() {
//    message m = new message();
//
//    if (phaseIs("busy")) {
//      m.add(makeContent("out", job));
//    }
//
//    return m;
//  }

//  public void showState() {
//    super.showState();
//
//    // System.out.println("job: " + job.getName());
//  }

  public String getTooltipText() {
    return super.getTooltipText() + "\n" + "job: " + job.getName();
  }
}
