/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-08-31
 */
package ExperimentMod;

import GenCol.entity;
import model.modeling.message;

/**
 * The Class ExperimentBackPorch.
 */
public class ExperimentBackPorch extends ExperimentBase {

  /**
   * Instantiates a new experiment back porch.
   */
  public ExperimentBackPorch() {
    this("ExperimentBackPorch");
  }

  /**
   * Instantiates a new experiment back porch.
   *
   * @param name the name
   */
  public ExperimentBackPorch(final String name) {
    super(name);

    addInport("xIn");
    addOutport("trigger");
  }

  /* (non-Javadoc)
   * @see ExperimentMod.ExperimentBase#initialize()
   */
  @Override
  public void initialize() {
    super.initialize();
    passivate();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#deltext(double, model.modeling.message)
   */
  @Override
  public void deltext(final double e, final message x) {
    Continue(e);
    if (phaseIs("passive"))
      for (int i = 0; i < x.getLength(); i++)
        if (messageOnPort(x, "xIn", i)) {
          final entity job = x.getValOnPort("xIn", i);
          holdIn("active", 0);
          valueSet = valueSetCache.peek(job.getName());
          log.out("--- Process back porch " + valueSet.getKey() + " ----");
        }
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#deltint()
   */
  @Override
  public void deltint() {
    passivate();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#out()
   */
  @Override
  public message out() {
    message m = new message();
    if (phaseIs("active"))
      m.add(makeContent("trigger", new entity("next")));
    return m;
  }
}
