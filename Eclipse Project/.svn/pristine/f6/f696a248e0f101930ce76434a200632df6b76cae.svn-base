/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-09-24
 */
package experiment.model;

import java.text.DecimalFormat;
import java.util.LinkedList;
import java.util.Queue;

import experiment.toolkit.ExperimentLog;
import experiment.toolkit.ValueSet;
import experiment.toolkit.ValueSetCache;
import experiment.toolkit.ValueSetCacheSingleton;
import view.modeling.ViewableAtomic;

/**
 * The Class ExperimentBase.
 */
public class ExperimentEngineBase extends ViewableAtomic {

  /** The value set cache. */
  public final ValueSetCache valueSetCache = ValueSetCacheSingleton.getInstance();

  /** The value set queue in. */
  protected final Queue<ValueSet> valueSetQueueIn = new LinkedList<ValueSet>();

  /** The value set queue out. */
  protected final Queue<ValueSet> valueSetQueueOut = new LinkedList<ValueSet>();

  /** The log. */
  protected ExperimentLog log;

  /**
   * Instantiates a new experiment base.
   */
  public ExperimentEngineBase() {
    this("ExperimentBase");
  }

  /**
   * Instantiates a new experiment base.
   *
   * @param name the name
   */
  public ExperimentEngineBase(final String name) {
    super(name);
    log = new ExperimentLog(name);
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#initialize()
   */
  @Override
  public void initialize() {
    super.initialize();
    passivate();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#showState()
   */
  @Override
  public void showState() {
    super.showState();

    final DecimalFormat deltaFormat = new DecimalFormat("#0.00");
    String state = "phase=" + phase + "; sigma=" + deltaFormat.format(sigma);
    log.out(state);
  }

  /* (non-Javadoc)
   * @see view.modeling.ViewableAtomic#getTooltipText()
   */
  @Override
  public String getTooltipText() {
    return super.getTooltipText();
  }
}
