/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-08-31
 */
package experiment.model;

import experiment.toolkit.ValueSet;
import experiment.toolkit.ValueSetPair;
import model.modeling.message;

/**
 * The Class ExperimentFrontPorch.
 */
public abstract class ExperimentEngineFrontPorch extends ExperimentEngineBase implements ExperimentEngineFrontPorchInterface {

  /**
   * Instantiates a new experiment front porch.
   */
  public ExperimentEngineFrontPorch() {
    this("ExperimentFrontPorch");
  }

  /**
   * Instantiates a new experiment front porch.
   *
   * @param name the name
   */
  public ExperimentEngineFrontPorch(final String name) {
    super(name);

    addOutport("xOut");
  }

  /* (non-Javadoc)
   * @see ExperimentMod.ExperimentBase#initialize()
   */
  @Override
  public void initialize() {
    super.initialize();
    holdIn("start", 0);
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#deltint()
   */
  @Override
  public void deltint() {
    if (phaseIs("start")) {
      startExperiments(valueSetQueueOut);
      holdIn("transfer", 0);
    } else if (phaseIs("process")) {
      if (valueSetQueueIn.size() > 0) {
        processExperiments(valueSetQueueIn);
        while (valueSetQueueIn.size() > 0) {
          final ValueSet valueSet = valueSetQueueIn.remove();
          valueSetQueueOut.add(valueSet);
        }
        holdIn("transfer", 0);
      }
    } else {
      if (areRunsComplete())
        passivate();
      else
        holdIn("passive", INFINITY);
    }

    showState();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#out()
   */
  @Override
  public message out() {
    final message m = new message();
    if (phaseIs("transfer"))
      while (valueSetQueueOut.size() > 0) {
        final ValueSet valueSet = valueSetQueueOut.remove();
        valueSet.incrementPass();
        ValueSetPair valueSetPair = null;
        try {
          valueSetPair = new ValueSetPair(valueSet);
        } catch (Exception e) {
          log.err("Serialize the ValueSet '" + valueSet.getKey() + "'", e);
        }
        m.add(makeContent("xOut", valueSetPair));
      }
    return m;
  }
}
