/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-08-31
 */
package experiment.model;

import GenCol.entity;
import experiment.toolkit.ValueSet;
import model.modeling.IODevs;
import model.modeling.message;

/**
 * The Class ExperimentBackPorch.
 */
public abstract class ExperimentEngineBackPorch extends ExperimentEngineBase implements ExperimentEngineBackPorchInterface {

  /** The xOut coupling. */
  int xOutCoupling;

  /**
   * Instantiates a new experiment back porch.
   */
  public ExperimentEngineBackPorch() {
    this("ExperimentBackPorch");
  }

  /**
   * Instantiates a new experiment back porch.
   *
   * @param name the name
   */
  public ExperimentEngineBackPorch(final String name) {
    super(name);
    xOutCoupling = 0;

    addOutport("xOut");
  }

  /**
   * xOut coupling.
   *
   * @return the IODevs
   */
  public IODevs xOutCoupling() {
    xOutCoupling++;
    return this;
  }

  /* (non-Javadoc)
   * @see ExperimentMod.ExperimentBase#initialize()
   */
  @Override
  public void initialize() {
    super.initialize();
    passivate();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#deltint()
   */
  @Override
  public void deltint() {
    if (phaseIs("process")) {
      if (valueSetQueueIn.size() > 0)
        while (valueSetQueueIn.size() > 0) {
          final ValueSet valueSet = valueSetQueueIn.remove();
          processValueSet(valueSet);
          valueSetQueueOut.add(valueSet);
          holdIn("transfer", 0);
        }
    } else
      passivate();
  }

  /* (non-Javadoc)
   * @see model.modeling.atomic#out()
   */
  @Override
  public message out() {
    final message m = new message();
    if (phaseIs("transfer"))
      while (valueSetQueueOut.size() > 0) {
        final ValueSet valueSet = valueSetQueueOut.remove();
        valueSetCache.put(valueSet, xOutCoupling);
        m.add(makeContent("xOut", new entity(valueSet.getKey())));
      }
    return m;
  }
}
