/*
 * CSE 593 - Fall 2016 - Applied Project
 * Author  : Lucio Ortiz and Robert Blazewicz
 * Version : DEVSJAVA 3.0
 * Date    : 2016-09-24
 */
package experiment.toolkit;

import java.io.FileReader;
import java.nio.file.Path;
import java.nio.file.Paths;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;

/**
 * The Class ValueSetLoad.
 */
public class ValueSetLoad {

  /** The settings. */
  final Settings settings = SettingsSingleton.getInstance();

  /** The Constant defaultFilename. */
  private static final String defaultFilename = "ValueSet.json";

  /** The pathname. */
  private String pathname;

  /** The filename. */
  private String filename;

  /**
   * Instantiates a new value set load.
   */
  public ValueSetLoad() {
    // Resolve path and file name for ValueSet data file.
    pathname = settings.lookupString("ValueSetPath", settings.getPathname());
    filename = settings.lookupString("ValueSetFile", defaultFilename);
  }

  /**
   * Load.
   *
   * @param valueSet the value set
   */
  public void load(final ValueSet valueSet) {
    loadValueSet(valueSet);
  }

  /**
   * Load.
   *
   * @param valueSet the value set
   * @param filename the filename
   */
  public void load(final ValueSet valueSet, final String filename) {
    this.filename = filename;
    loadValueSet(valueSet);
  }

  /**
   * Load.
   *
   * @param valueSet the value set
   * @param pathname the pathname
   * @param filename the filename
   */
  public void load(final ValueSet valueSet, final String pathname, final String filename) {
    this.pathname = pathname;
    this.filename = filename;
    loadValueSet(valueSet);
  }

  /**
   * Load value set.
   *
   * @param valueSet the value set
   */
  private void loadValueSet(final ValueSet valueSet) {
    final JSONParser parser = new JSONParser();
    final Path filePath = Paths.get(pathname, filename);
    try (FileReader fileReader = new FileReader(filePath.toFile())) {
      final Object obj = parser.parse(fileReader);
      final JSONObject jsonObject = (JSONObject) obj;
      for (Object key : jsonObject.keySet()) {
        final String keyName = (String)key;
        final Object keyValue = jsonObject.get(keyName);
        if (keyValue instanceof JSONArray) {
          final JSONArray jsonArray = (JSONArray)keyValue;
          if (jsonArray.size() == 3) {
            final Object value0 = jsonArray.get(0);
            final Object value1 = jsonArray.get(1);
            final Object value2 = jsonArray.get(2);
            if (!(value0 instanceof String))
              throw new Exception("Array index 0 must be a floating point string: " + keyName);
            if (!(value1 instanceof String))
              throw new Exception("Array index 1 must be a string: " + keyName);
            if (!(value2 instanceof String))
              throw new Exception("Array index 2 must be a string: " + keyName);
            valueSet.addValue(null, keyName, Double.parseDouble((String)value0), (String)value1, (String)value2);
          } else
            throw new Exception("Array must have 3 entries: " + keyName);
        } else if (keyValue instanceof JSONObject)
          throw new Exception("Nested-object unsupported: " + keyName);
        else
          throw new Exception("Element unsupported: " + keyName);
      }
    } catch (Exception e) {
      throw new RuntimeException("ValueSet file " + filePath + ": " + e.getMessage());
    }
  }

  /**
   * Gets the pathname.
   *
   * @return the pathname
   */
  public String getPathname() {
    return pathname;
  }

  /**
   * Gets the filename.
   *
   * @return the filename
   */
  public String getFilename() {
    return filename;
  }
}
